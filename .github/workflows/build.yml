name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Executa quando criar tags como v1.0.0
  workflow_dispatch:  # Executar manualmente
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: ⬇️ Checkout source
        uses: actions/checkout@v3

      - name: 🛠️ Install dependencies (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt update || brew update
          sudo apt install -y cmake gcc pkg-config libgtk-3-dev libssl-dev || true
          brew install cmake gtk+3 openssl || true

      - name: 🛠️ Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y mingw cmake nsis
          echo "C:\ProgramData\chocolatey\bin" >> $GITHUB_PATH

      - name: 🔧 Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: 🚀 Build
        run: |
          cd build
          cmake --build . --config Release

      - name: 📦 Package
        run: |
          cd build
          cpack

      - name: ⬆️ Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SecurePasswordCLI-${{ matrix.os }}
          path: build/*.*
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 🔄 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

